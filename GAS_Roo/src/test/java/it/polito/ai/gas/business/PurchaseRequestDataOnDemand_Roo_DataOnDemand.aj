// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package it.polito.ai.gas.business;

import it.polito.ai.gas.business.PurchaseRequest;
import it.polito.ai.gas.business.PurchaseRequestDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect PurchaseRequestDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PurchaseRequestDataOnDemand: @Component;
    
    private Random PurchaseRequestDataOnDemand.rnd = new SecureRandom();
    
    private List<PurchaseRequest> PurchaseRequestDataOnDemand.data;
    
    public PurchaseRequest PurchaseRequestDataOnDemand.getNewTransientPurchaseRequest(int index) {
        PurchaseRequest obj = new PurchaseRequest();
        setAcquirer(obj, index);
        setProposal(obj, index);
        setQuantity(obj, index);
        setReceived(obj, index);
        return obj;
    }
    
    public void PurchaseRequestDataOnDemand.setAcquirer(PurchaseRequest obj, int index) {
        Integer acquirer = new Integer(index);
        obj.setAcquirer(acquirer);
    }
    
    public void PurchaseRequestDataOnDemand.setProposal(PurchaseRequest obj, int index) {
        Integer proposal = new Integer(index);
        obj.setProposal(proposal);
    }
    
    public void PurchaseRequestDataOnDemand.setQuantity(PurchaseRequest obj, int index) {
        Float quantity = new Integer(index).floatValue();
        obj.setQuantity(quantity);
    }
    
    public void PurchaseRequestDataOnDemand.setReceived(PurchaseRequest obj, int index) {
        Boolean received = Boolean.TRUE;
        obj.setReceived(received);
    }
    
    public PurchaseRequest PurchaseRequestDataOnDemand.getSpecificPurchaseRequest(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        PurchaseRequest obj = data.get(index);
        Integer id = obj.getId();
        return PurchaseRequest.findPurchaseRequest(id);
    }
    
    public PurchaseRequest PurchaseRequestDataOnDemand.getRandomPurchaseRequest() {
        init();
        PurchaseRequest obj = data.get(rnd.nextInt(data.size()));
        Integer id = obj.getId();
        return PurchaseRequest.findPurchaseRequest(id);
    }
    
    public boolean PurchaseRequestDataOnDemand.modifyPurchaseRequest(PurchaseRequest obj) {
        return false;
    }
    
    public void PurchaseRequestDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = PurchaseRequest.findPurchaseRequestEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'PurchaseRequest' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<PurchaseRequest>();
        for (int i = 0; i < 10; i++) {
            PurchaseRequest obj = getNewTransientPurchaseRequest(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
