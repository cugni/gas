// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package it.polito.ai.gas.business;

import it.polito.ai.gas.business.PurchaseRequest;
import it.polito.ai.gas.business.User;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect PurchaseRequest_Roo_Finder {
    
    public static TypedQuery<PurchaseRequest> PurchaseRequest.findPurchaseRequestsByAcquirer(User acquirer) {
        if (acquirer == null) throw new IllegalArgumentException("The acquirer argument is required");
        EntityManager em = PurchaseRequest.entityManager();
        TypedQuery<PurchaseRequest> q = em.createQuery("SELECT o FROM PurchaseRequest AS o WHERE o.acquirer = :acquirer", PurchaseRequest.class);
        q.setParameter("acquirer", acquirer);
        return q;
    }
    
    public static TypedQuery<PurchaseRequest> PurchaseRequest.findPurchaseRequestsByCompletedNot(Boolean completed) {
        if (completed == null) throw new IllegalArgumentException("The completed argument is required");
        EntityManager em = PurchaseRequest.entityManager();
        TypedQuery<PurchaseRequest> q = em.createQuery("SELECT o FROM PurchaseRequest AS o WHERE o.completed IS NOT :completed", PurchaseRequest.class);
        q.setParameter("completed", completed);
        return q;
    }

    public static TypedQuery<PurchaseRequest> PurchaseRequest.findIncompletePurchaseRequests(Proposal proposal) {
        if (proposal == null) throw new IllegalArgumentException("The proposal argument is required");
        EntityManager em = PurchaseRequest.entityManager();
        TypedQuery<PurchaseRequest> q = em.createQuery("SELECT o FROM PurchaseRequest AS o WHERE (o.completed IS NOT :completed AND o.proposal = :proposal)", PurchaseRequest.class);
        q.setParameter("completed", true);
        q.setParameter("proposal", proposal);


        return q;
    }
}
