// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package it.polito.ai.gas.business;

import it.polito.ai.gas.business.Event;
import it.polito.ai.gas.business.User;
import java.util.Set;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Event_Roo_Finder {
    
    public static TypedQuery<Event> Event.findEventsByUser(User user) {
        if (user == null) throw new IllegalArgumentException("The user argument is required");
        EntityManager em = Event.entityManager();
        TypedQuery<Event> q = em.createQuery("SELECT o FROM Event AS o WHERE o.user = :user", Event.class);
        q.setParameter("user", user);
        return q;
    }
    
    public static TypedQuery<Event> Event.findEventsByUsers(Set<User> users) {
        if (users == null) throw new IllegalArgumentException("The users argument is required");
        EntityManager em = Event.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Event AS o WHERE");
        for (int i = 0; i < users.size(); i++) {
            if (i > 0) queryBuilder.append(" AND");
            queryBuilder.append(" :users_item").append(i).append(" MEMBER OF o.users");
        }
        TypedQuery<Event> q = em.createQuery(queryBuilder.toString(), Event.class);
        int usersIndex = 0;
        for (User _user: users) {
            q.setParameter("users_item" + usersIndex++, _user);
        }
        return q;
    }
    
}
